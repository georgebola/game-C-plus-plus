#version 330 core

layout (triangles) in;
layout (triangle_strip) out;
layout (max_vertices = 3) out;

in vec3 vertex_normal_modelspace[];
in vec2 vertex_UV[];

uniform vec4 planeCoeffs;
uniform float y_of_sphere;
uniform vec4 detachmentDisplacement;

uniform mat4 P;
uniform mat4 V;
uniform mat4 M;


out vec4 vertex_position_worldspace;
out vec3 vertex_normal_modelspace1;
out vec2 vertex_UV1;
out mat4 modify;

void main()
{	int sum_aristera=0;
	int sum_deksia =0;
	modify = M;

    for (int i = 0; i < gl_in.length(); i++) {
		if (dot(gl_in[i].gl_Position,M * planeCoeffs)>0)
		{
				sum_aristera = sum_aristera + 1;	
				}
		else if (dot(gl_in[i].gl_Position,M * planeCoeffs)<0)
		{
				sum_deksia = sum_deksia + 1;	
				modify[3][1] = y_of_sphere;

			}

	}
    

	for (int i = 0; i < gl_in.length(); i++){
		if(sum_aristera == 3 || sum_deksia == 3){
			gl_Position = P * V * modify * gl_in[i].gl_Position;
			vertex_position_worldspace = modify * gl_in[i].gl_Position;
			vertex_normal_modelspace1 = vertex_normal_modelspace[i];
			vertex_UV1 =  vertex_UV[i];
			EmitVertex();
		}
	}

    EndPrimitive();
}